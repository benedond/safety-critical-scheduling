<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="utf-8">
	<style>
		table, table td, table th {
			border-collapse: collapse;
			padding: 5px;
			border: 1px solid black;
		}
	</style>
</head>
<body>
	<div>
		<label>File: <input type="file"></label>
	</div>

	<h2 class="crit"></h2>

	<table class="windows">
		<thead>
			<tr>
				<th>w</th>
				<th>A</th>
				<th>&Sigma; A</th>
				<th>B</th>
				<th>A+B</th>
				<th>(A+B)/h</th>
			</tr>
		</thead>
		<tbody>
		</tbody>
	</table>


	<script type="text/javascript">
		function floorFloat(float, places = 4, decimalSeparator) {
		    if (!float) {
		        float = 0;
		    }

		    const coef = 10 ** places;
		    let rtn = Number(Math.floor(float * coef)/coef).toFixed(places);

		    if (decimalSeparator && decimalSeparator !== ".") {
		        rtn = rtn.replace(".", ",");
		    }

		    return rtn;
		}

		document.querySelector("input[type='file']").addEventListener("change", e => {
			const file = e.target.files[0];
			
			if (!file)
				return;

			const reader = new FileReader();

			reader.addEventListener("load", e => {
				const fileContent = e.target.result;

				try {
					document.querySelector(".windows tbody").innerHTML = "";
				  const data = JSON.parse(fileContent);

				  if (!data) {
				  	alert("chyba dat");
				  	return;
				  }

				  let crit = 0;
				  let mfLength = data.environment.majorFrameLength;

				  let i=0;
				  data.solution.windows.forEach(window => {
				  	i++;
				  	let A_ijk = [];
				  	let B_ijk = -1;

				  	window.tasks.forEach(task => {
				  		let name = task.task;
				  		let proc = task.processor;

				  		let ach = data.assignmentCharacteristics
				  		.filter(ac => ac.task === name)[0].resourceAssignments.filter(ra => ra.processors[0].processor === proc)[0];

				  		let task_a = ach.slope;
				  		let task_b = ach.intercept;

				  		B_ijk = Math.max(B_ijk, task_b * 0.6 * window.length);
				  		A_ijk.push(task_a * task.length);
				  	});

				  	let a_vals = "";
				  	let a_val = 0;
				  	A_ijk.forEach(a => {
				  		crit += a;
				  		a_val += a;
				  		a_vals += floorFloat(a) + " + ";
				  	});
				  	a_vals = a_vals.substr(0, a_vals.length-2);

				  	let row = `<tr><td>window ${i}: ${window.length}ms</td><td>${a_vals}</td><td>${floorFloat(a_val)}</td><td>${floorFloat(B_ijk)}</td><td>${floorFloat(B_ijk+a_val)}</td><td>${floorFloat((B_ijk+a_val)/mfLength)}</td></tr>`;
				  	document.querySelector(".windows tbody").innerHTML += row;
				  	crit += B_ijk;
				  });

				  crit /= mfLength;
				  document.querySelector(".crit").innerText = `Value: ${crit}`

				  // DATA

				}
				catch (e) {
				  	alert("chyba dat");
				}
			});

			// read the file
			reader.readAsText(file);
		});
	</script>

</body></html>